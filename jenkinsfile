pipeline {
    agent {
        docker {                           //using docker agent
            image 'node:18-alpine'
            reuseNode true                 //for workspace synchronization
        }
    }

    //env variable for netlify cli
    environment {
        NETLIFY_SITE_ID = '53b9e83b-7cd6-4478-8a14-d847e2579eb7'
        NETLIFY_AUTH_TOKEN = credentials('netlify-token')
    }

    stages {
        stage('Build') {                     //Build stage 
            steps {
                //npm ci used instead of npm install esp in automated environment where multiple build is neccessary
                sh '''
                  npm ci             
                  npm run build
                '''
            }    
        }

        stage('Unit Test') {                       //Test stage
            steps {
                //check the build artifact and run npm test on app.test.js
                sh '''
                    test -f build/index.html      
                    npm test                     
               '''
            }
        }
        
        stage('Deploy') {       //Deploy to production
            steps {
                // Deploy on netlify
                sh '''
                    npm install netlify-cli  
                    node_modules/.bin/netlify status 
                    node_modules/.bin/netlify deploy --dir=build --prod                                 
               '''
            }
        }
    }

    post {
        always {
            junit 'test-results/junit.xml'
        }
    }
}

