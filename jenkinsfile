pipeline {
    agent any

    //env variable for netlify cli
    environment {
        NETLIFY_SITE_ID = '9bdedd39-09a0-43f7-b95b-51a56748d8df'
        NETLIFY_AUTH_TOKEN = credentials('netlify-token')
    }

    stages {
        stage('Build') {       //Build stage on docker container
            agent {
                docker {
                    image 'node:18-alpine'
                    reuseNode true          //for workspace synchronization
                }
            }
            steps {
                sh '''
                  npm --version       //To track the version, useful for troubleshooting
                  node --version

                  npm ci             //used instead of npm build esp in automated environment where multiple build is neccessary
                  npm run build
                  
                '''
            }    
        }

        stage('Test') {       //Test stage
            agent {
                docker {
                    image 'node:18-alpine'
                    reuseNode true          
                }
            }

            steps {
                //check the build artifact and run npm test on app.test.js
                sh '''
                    test -f build/index.html      
                    npm test                     
               '''
            }
        }
        stage('Deploy') {       //Deploy
            agent {
                docker {
                    image 'node:18-alpine'
                    reuseNode true          
                }
            }

            steps {
                // Deploy on netlify
                sh '''
                    npm install netlify-cli  
                    node_modules/.bin/netlify status   
                                  
               '''
            }
        }
    }

    post {
        always {
            junit 'test-results/junit.xml'
        }
    }
}

